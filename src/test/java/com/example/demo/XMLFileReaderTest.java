package com.example.demo;

import org.apache.commons.lang3.StringUtils;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

import javax.imageio.ImageIO;
import javax.xml.bind.DatatypeConverter;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Base64;
import java.util.List;

@SpringBootTest
class XMLFileReaderTest {

    private final String dirPath = "C:\\Users\\hyj\\workday\\ftp\\postProcess\\";
    @Autowired
    FileReader reader;

    @Test
    void readXmlFile1() throws IOException {
        String fileName = "BHS00796.JPEG";
        String base = "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";



        byte[] decodedBytes = Base64.getDecoder().decode(base);
        BufferedImage bufImg = ImageIO.read(new ByteArrayInputStream(decodedBytes));

        ImageIO.write(bufImg, "JPEG", new File(dirPath + fileName));
        System.out.println(new String(decodedBytes, "UTF-8"));
    }

    @Test
    void readXmlFile() throws IOException {

    }


}
